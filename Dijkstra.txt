https://eduinf.waw.pl/inf/alg/001_search/0138.php


class Node
    {
        public int value;
    }
    class Krawedz
    {
        public Node Node1;
        public Node Node2;
        public int waga;
    }
    class AlgorytmDijk
    {
        public int v; //punkt startowy
        public List<Node> Q = new List<Node>();
        public List<Node> S = new List<Node>();
        public List<Krawedz> krawedzie = new List<Krawedz>();
        int[] d;
        int[] p;
        public AlgorytmDijk(List<Node> q, List<Krawedz> krawedzie, int V)
        {
            this.Q = q;
            this.krawedzie = krawedzie;
            this.d = new int[Q.Count];
            this.p = new int[Q.Count];
            this.v = V;
        }
        public void Algorytm()
        {
            for (int i = 0; i <= d.Count() - 1; i ++)
            {
                if (this.v != i) d[i] = int.MaxValue;
                else d[i] = 0;
            }
            for (int i = 0; i <= p.Count() - 1; i++)
            {
                d[i] = -1;
            }
            while (true) 
            {
                if (Q.Count == 0)
                {
                    break;
                }

            }
        }
    }
